import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import java.io.InputStreamReader;

/**
 * 代码行数统计
 */

public class CodeCount {
	// java源代码路径
	private String srcPath;

	public CodeCount(String srcPath) {
		this.srcPath = srcPath;
	}

	/**
	 * 统计后缀为java的代码行数
	 * 
	 * @return
	 */

	public int count() {
		return count(srcPath, "java");
	}

	/**
	 * 
	 * 统计指定目录（包括子目录）指定下所有后缀为suffix文件的总行数
	 * 
	 * @param path
	 * 
	 * @param suffix
	 * 
	 * @return
	 */

	public int count(String path, String suffix) {

		int sum = 0;

		File file = new File(path);
		if (file.isDirectory()) {
			File[] items = file.listFiles();
			for (File item : items) {
				sum += count(item.getAbsolutePath(), suffix);
			}
		} else {
			if (path.endsWith(suffix)) {
				sum += count(path);
			}
		}
		return sum;
	}

	/**
	 * 
	 * 统计指定文件的内容行数
	 * 
	 * @param file
	 * 
	 * @return
	 */

	public int count(String file) {
		int sum = 0;

		try {
			InputStream in = new FileInputStream(file);
			BufferedReader br = new BufferedReader(new InputStreamReader(in));
			String line = br.readLine();
			while (line != null) {
				sum += 1;
				line = br.readLine();
			}
			br.close();
		} catch (Exception ex) {
			ex.printStackTrace();
		}
		System.out.println("文件：" + (file.substring(file.lastIndexOf("\\") + 1))
				+ "共有 " + sum + " 行。");
		return sum;
	}

	public static void main(String[] args) {

		String srcPath = "D:\\android\\";

		CodeCount codeCount = new CodeCount(srcPath);

		int lineCount = codeCount.count();

		System.out.println("我已经累计写了 " + lineCount + " 行代码");

	}

}