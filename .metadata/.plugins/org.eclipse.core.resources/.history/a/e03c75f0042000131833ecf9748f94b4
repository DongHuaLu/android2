package com.dolph.twilioapp.activity.contact;

import android.app.Activity;
import android.app.AlertDialog;
import android.content.DialogInterface;
import android.content.DialogInterface.OnClickListener;
import android.content.Intent;
import android.os.Bundle;
import android.view.KeyEvent;
import android.view.View;
import android.widget.TextView;

import com.dolph.twilioapp.AppValues;
import com.dolph.twilioapp.R;
import com.dolph.twilioapp.model.Contact;
import com.dolph.twilioapp.twilio.CallPhoneService;
import com.dolph.utils.HttpUtils;
import com.loopj.android.http.AsyncHttpResponseHandler;
import com.loopj.android.http.RequestParams;

public class ContactActivity extends Activity {
	private static final int UPDATE_SUCCESS = 2;
	private TextView contactName;
	private TextView contactNumber;
	private TextView contactAddress;
	private Contact contact;
	private CallPhoneService twilioService;
	private AppValues appValues;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_contact);
		appValues = new AppValues(this.getApplicationContext());
		contactName = (TextView) findViewById(R.id.ContactName);
		contactNumber = (TextView) findViewById(R.id.ContactNumber);
		contactAddress = (TextView) findViewById(R.id.ContactAddress);
		Intent dataIntent = getIntent();
		Bundle data = dataIntent.getExtras();
		contact = (Contact) data.getSerializable("contact");
		contactName.setText(contact.getName());
		contactNumber.setText(contact.getNumber());
		contactAddress.setText(contact.getAddress());
		twilioService = CallPhoneService.getCallPhoneService(this.getApplicationContext());
	}

	public void modifyContact(View view) {
		Intent intent = new Intent(this, NewContactActivity.class);
		intent.putExtra("contact", contact);
		startActivityForResult(intent, 0);
	}

	@Override
	protected void onActivityResult(int requestCode, int resultCode, Intent data) {
		super.onActivityResult(requestCode, resultCode, data);
		if (resultCode == UPDATE_SUCCESS) {
			contactName.setText(data.getStringExtra("contactName"));
			contactNumber.setText(data.getStringExtra("contactNumber"));
			contactAddress.setText(data.getStringExtra("address"));
		}
	}

	public void call(View view) {
		String number = contactNumber.getText().toString();
		// if (Utils.validatePhone(number)) {
		if (true) {
			try {
				twilioService.connect(number);
				new AlertDialog.Builder(this).setTitle("拨打中").setMessage("正在拨打" + number).setNegativeButton("挂断", new OnClickListener() {

					@Override
					public void onClick(DialogInterface dialog, int which) {
						twilioService.disconnect();
					}
				}).create().show();
			} catch (Exception e) {
				new AlertDialog.Builder(this).setTitle("拨打失败").setNegativeButton("确定", new OnClickListener() {

					@Override
					public void onClick(DialogInterface dialog, int which) {
					}
				}).create().show();
				e.printStackTrace();
			}
		}
	}

	public void deleteContact(View view) {
		RequestParams params = new RequestParams();
		params.put("userId", appValues.getCurrentUserId() + "");
		params.put("deviceId", appValues.getDeviceId());
		params.put("contactId", contact.getId() + "");

		HttpUtils.get("http://10.200.0.157:82/loginfilter/DeleteContact?", params, new AsyncHttpResponseHandler() {

			@Override
			public void onSuccess(String content) {
				super.onSuccess(content);
			}

			@Override
			public void onFailure(Throwable error, String content) {
				super.onFailure(error, content);
				new AlertDialog.Builder().setTitle("失败").setMessage("删除失败,可能网络有错误").create().show();
			}

		});
	}

	public boolean onKeyDown(int keyCode, KeyEvent event) {
		if (keyCode == KeyEvent.KEYCODE_BACK && event.getRepeatCount() == 0) {

			return true;
		}

		return super.onKeyDown(keyCode, event);
	}
}
